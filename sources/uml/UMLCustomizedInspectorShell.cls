"Filed out from Dolphin Smalltalk 7"!

UMLToolShell subclass: #UMLCustomizedInspectorShell
	instanceVariableNames: 'cardPresenter viewStructure headerContainer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
UMLCustomizedInspectorShell guid: (GUID fromString: '{53a4c376-d9dc-4da4-beff-d3c421ff158e}')!
UMLCustomizedInspectorShell comment: ''!
!UMLCustomizedInspectorShell categoriesForClass!MVP-Resources-UFabrik! !
!UMLCustomizedInspectorShell methodsFor!

addCommandArgsButtonsFor: anOrderedCollection 

	anOrderedCollection do: [:each | | button |
		button := SWLinkButton new.
		(view viewNamed: 'buttonsContainer') addSubView: button. 
		button commandDescription: (CommandDescription command: ('_cmd_', each methodName) asSymbol description: each methodName capitalized);
			text: each methodName capitalized;
			backcolor: Color face3d;
			hoverColor: (RGB red: 128 green: 64 blue: 0) faded;
			outColor: (RGB red: 128 green: 64 blue: 0).]!

addCommandButtonsFor: anOrderedCollection 

	anOrderedCollection do: [:each | | button |
		button := SWLinkButton new.
		(view viewNamed: 'buttonsContainer') addSubView: button. 
		button commandDescription: (CommandDescription command: ('_cmd_', each methodName) asSymbol description: each methodName capitalized);
			text: each methodName capitalized;
			backcolor: Color face3d;
			hoverColor: Color darkBlue faded;
			outColor: Color darkBlue.]!

addNewObject
	| mainObject relatedObjectClass selectedObject |

	mainObject := self model.
	relatedObjectClass := mainObject getRelatedClassForInstVarNamed: self selectedInstVar instVarName.
	selectedObject := relatedObjectClass newInstance.
	selectedObject runBehaviorInitialize.
	(mainObject getVariableNamed: self topShell selectedInstVar instVarName) smalltalkObject add: selectedObject.
	self topShell updateList.
!

browseClass
	| shellBrowser |

	shellBrowser := UMLModelShell show.
	shellBrowser selectUMLClass: model umlClass ifAbsent: [].!

cardPresenter
	^cardPresenter!

createComponents

	super createComponents.

	cardPresenter := self add: Presenter new name: 'card'.
	headerContainer := self add: Presenter new name: 'headerContainer'.!

executeButtonCommand: stringCommand
	| result |

	result := (self isButtonWithArguments: stringCommand) 
		ifTrue: [self executeButtonCommandWithArguments: stringCommand]
		ifFalse: [model vmPerform: stringCommand asSymbol.].

	(result vmPerform: #isBasic) smalltalkObject ifTrue: [^self processBasicResult: result of: stringCommand].

	(result vmPerform: #isCollection) smalltalkObject ifTrue: [^self showCollection: result].

	result inspectUMLWithCustomizedView!

executeButtonCommandWithArguments: aString 
	 | commandStructure arguments |

	commandStructure := Array new: 3.
	[commandStructure at: 1 put: (model vmPerform: aString asSymbol) smalltalkObject first smalltalkObject] 	
		on: Error 
		do: [:ex | ^('Error: ', ex messageText) asUMLObject: self defaultVirtualMachine ].
	[commandStructure at: 2 put: (model vmPerform: aString asSymbol) smalltalkObject second smalltalkObject.]
		on: Error 
		do: [:ex | ^('Error: ', ex messageText) asUMLObject: self defaultVirtualMachine ].
	arguments := OrderedCollection new.
	commandStructure second do: [:eachArgumentType | 
		arguments add: (
			eachArgumentType belongToVirtualMachine
			ifTrue: [ (self isCollection: eachArgumentType) ifTrue: [^self showErrorByCollectionFor].
				self getNewBasicValueOf: eachArgumentType] 
			ifFalse: [ | umlModel availableArguments selectedArg |
				umlModel := self defaultVirtualMachine umlModelOf: eachArgumentType.
				availableArguments := umlModel getAnyStoreObjectOf: eachArgumentType.
				availableArguments := availableArguments isEmpty 
					ifTrue: [| newObject |  
						newObject := eachArgumentType newInstance runBehaviorInitialize; yourself. 
						OrderedCollection with: newObject] 
					ifFalse: [availableArguments].
				selectedArg :=  (DetalleDeOpciones listaUMLDinamicaCon: availableArguments titulo: 'Select Argument') 
								ifNil: [^'Class not selected' asUMLObject: self defaultVirtualMachine].
				selectedArg last
				])].

	^[self model vmPerform: commandStructure first asSymbol withArguments: (arguments asArray collect: [:each | each asUMLObject: self defaultVirtualMachine])]
	on: Error 
	do: [:ex | ('Error: ', ex messageText) asUMLObject: self defaultVirtualMachine ]!

exitInspector

	self exit!

getModel
	^model!

getNewBasicValueOf: anUMLVirtualMachineClass 
	
	^UMLSimpleValueDialog createFor: anUMLVirtualMachineClass.
!

hasSelectedClass
	^false!

hasSelectedModel
	^false!

inspectObjectForDesignGUI

	^model inspectUMLInstanceForDesign!

inspectUMLInstance: anUMLInstance 

	anUMLInstance belongToVirtualMachine ifTrue: [^anUMLInstance inspectUMLInstance].

	^anUMLInstance inspectUMLWithCustomizedView!

isButtonWithArguments: aString 

	^((model getMetaclass getImplementationsFor: UMLGUIButtomArgCategory current) collect: [:each | each methodName])
		includes: aString asSymbol!

isCategoryBrowser
	^false!

isCollection: anUMLVirtualMachineClass 

	(anUMLVirtualMachineClass  smalltalkClass == String) ifTrue: [^false].
	^Collection allSubclasses includes: anUMLVirtualMachineClass smalltalkClass
!

isCustomizedInspector
	^true!

mainComposite

	^self!

processBasicResult: umlSimpleObject of: stringCommand 
	MessageBox 
		notify: 'The Message <' , stringCommand , '> has been send, the result is <' 
				, umlSimpleObject smalltalkObject printString , '>'
		caption: self applicationName.
	self exit.
	model inspectUMLWithCustomizedView!

queryCommand: aCommandQuery
	| cmd |
	cmd := aCommandQuery commandSymbol.

	"Handle Undo/Redo commands"
	(#(#exit #browseClass #umlBasicInspect #refreshInspector #openVirtualMachineBrowser #openUMLBrowser #openCategoryBrowser #openTraitBrowser #openUMLWorkspace #showWebConfiguration #startDesktopLogin #startWebLogin #openUMLIdeaSpace) includes: cmd)
		ifTrue: 
			[aCommandQuery isEnabled: true.
			^true].

	((cmd indexOfSubCollection: '_cmd_') ~~  0) 
	ifTrue: [aCommandQuery isEnabled: (model umlClass canUnderstand: (cmd allButFirst: 5) asSymbol).
		aCommandQuery commandDescription: (CommandDescription command: (Message selector: #executeButtonCommand: argument: (cmd allButFirst: 5))).
		^true].!

refreshInspector

	self exit.

	model inspectUMLWithCustomizedView


!

selectedCard
	^cardPresenter view currentCard!

selectedInstVar
	| currentPresenter |

	currentPresenter := (self selectedCard presenter subPresenters detect: [:each | each view hasFocus] ifNone:[^nil]).
	
	^nil
!

selectedObject
	^self model!

selectFirstCard

	cardPresenter view firstCard!

setCaptionWith: aString

	view caption: aString!

setObjectHeaderFor: anUMLClass
	| receiverHeader |

	receiverHeader := (UMLGUIObjectHeader current unorderedMethodsFor: anUMLClass) asOrderedCollection collect: [:each | each methodName].

	receiverHeader do: [:each | | rtfText objectString presenter |
		[objectString := (model vmPerform: each asSymbol) smalltalkObject printString.] 
			on: Error 
			do: [:ex | objectString := ('Error executing aspect [', each, ']', String lineDelimiter , (ex messageText copyWithoutAll: '<>'))].
		rtfText := RichText fromRtf: '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Trebuchet MS;}{\f1\fnil Segoe UI;}}
{\colortbl ;\red0\green128\blue0;\red0\green0\blue255;}
\viewkind4\uc1\pard\cf1\lang1033\ul\b\f0\fs24 ', each capitalized,'\cf0\ulnone\b0\fs18 
\par \cf2\b\fs20 ', String lineDelimiter, objectString ,'\cf0\b0\f1\fs18 
\par }'.

		presenter := ((RichTextPresenter create: 'UML Rich text header' in: headerContainer) model: rtfText).
		presenter view hasStaticEdge: true;
			hasClientEdge: false ].!

showCollection: collectionOfUMLObjects
	| commandShell |

	collectionOfUMLObjects smalltalkObject isEmpty ifTrue: [^self].
	commandShell := UMLCommandListShell create.
	commandShell createListForCollection: collectionOfUMLObjects.
	commandShell show.
!

showErrorByCollectionFor
	^('Error: ', String lineDelimiter ,'The arguments of a command can not be Collections of objects') asUMLObject: self defaultVirtualMachine!

umlBasicInspect

	model inspectUMLInstance.!

viewMode: aSymbol 
	^cardPresenter view viewMode: aSymbol !

viewStructure
	^viewStructure!

viewStructure: aTreeModel 

	((aTreeModel asOrderedCollection remove: self model umlClass; yourself) select: [:each | each hasInstance]) do: [:each | each instance: model]. "this is because the design is attached to a concrete UMLInstance and the UMLAspectComponentDescriptor are attached to this concrete instance. So, here we attach the model of the receiver to the Descriptor"
	"THIS HAS TO BE REIMPLEMENTED we CAN NOT attach a general descriptor to a concre instance "
	viewStructure := aTreeModel.! !
!UMLCustomizedInspectorShell categoriesFor: #addCommandArgsButtonsFor:!public! !
!UMLCustomizedInspectorShell categoriesFor: #addCommandButtonsFor:!public! !
!UMLCustomizedInspectorShell categoriesFor: #addNewObject!public! !
!UMLCustomizedInspectorShell categoriesFor: #browseClass!public! !
!UMLCustomizedInspectorShell categoriesFor: #cardPresenter!accessing!public! !
!UMLCustomizedInspectorShell categoriesFor: #createComponents!public! !
!UMLCustomizedInspectorShell categoriesFor: #executeButtonCommand:!public! !
!UMLCustomizedInspectorShell categoriesFor: #executeButtonCommandWithArguments:!public! !
!UMLCustomizedInspectorShell categoriesFor: #exitInspector!public! !
!UMLCustomizedInspectorShell categoriesFor: #getModel!public! !
!UMLCustomizedInspectorShell categoriesFor: #getNewBasicValueOf:!public! !
!UMLCustomizedInspectorShell categoriesFor: #hasSelectedClass!public! !
!UMLCustomizedInspectorShell categoriesFor: #hasSelectedModel!public! !
!UMLCustomizedInspectorShell categoriesFor: #inspectObjectForDesignGUI!public! !
!UMLCustomizedInspectorShell categoriesFor: #inspectUMLInstance:!public! !
!UMLCustomizedInspectorShell categoriesFor: #isButtonWithArguments:!public! !
!UMLCustomizedInspectorShell categoriesFor: #isCategoryBrowser!public! !
!UMLCustomizedInspectorShell categoriesFor: #isCollection:!public! !
!UMLCustomizedInspectorShell categoriesFor: #isCustomizedInspector!public! !
!UMLCustomizedInspectorShell categoriesFor: #mainComposite!public! !
!UMLCustomizedInspectorShell categoriesFor: #processBasicResult:of:!public! !
!UMLCustomizedInspectorShell categoriesFor: #queryCommand:!public! !
!UMLCustomizedInspectorShell categoriesFor: #refreshInspector!public! !
!UMLCustomizedInspectorShell categoriesFor: #selectedCard!public! !
!UMLCustomizedInspectorShell categoriesFor: #selectedInstVar!public! !
!UMLCustomizedInspectorShell categoriesFor: #selectedObject!public! !
!UMLCustomizedInspectorShell categoriesFor: #selectFirstCard!public! !
!UMLCustomizedInspectorShell categoriesFor: #setCaptionWith:!public! !
!UMLCustomizedInspectorShell categoriesFor: #setObjectHeaderFor:!public!uml mvp layout! !
!UMLCustomizedInspectorShell categoriesFor: #showCollection:!public! !
!UMLCustomizedInspectorShell categoriesFor: #showErrorByCollectionFor!public! !
!UMLCustomizedInspectorShell categoriesFor: #umlBasicInspect!public! !
!UMLCustomizedInspectorShell categoriesFor: #viewMode:!public! !
!UMLCustomizedInspectorShell categoriesFor: #viewStructure!accessing!public! !
!UMLCustomizedInspectorShell categoriesFor: #viewStructure:!public!to be reimplemented! !

!UMLCustomizedInspectorShell class methodsFor!

createUMLInspectorFor: anUMLInstance

	^self showOn: anUMLInstance!

resource_Default_view
	"Answer the literal data from which the 'Default view' resource can be reconstituted.
	DO NOT EDIT OR RECATEGORIZE THIS METHOD.

	If you wish to modify this resource evaluate:
	ViewComposer openOn: (ResourceIdentifier class: self selector: #resource_Default_view)
	"

	^#(#'!!STL' 3 788558 10 ##(Smalltalk.STBViewProxy)  8 ##(Smalltalk.ShellView)  98 27 0 0 98 2 27131905 131073 416 0 524550 ##(Smalltalk.ColorRef)  8 4278190080 0 551 0 0 0 416 788230 ##(Smalltalk.BorderLayout)  1 1 410 8 ##(Smalltalk.ContainerView)  98 15 0 416 98 2 8 1140850688 131073 560 0 0 0 7 0 0 0 560 530 1 1 410 576 98 15 0 560 98 2 8 1140850688 131073 656 0 0 0 7 0 0 0 656 530 1 1 0 0 0 410 8 ##(Smalltalk.Toolbar)  98 25 0 656 98 2 8 1409288972 131137 736 0 482 8 4278190080 0 519 0 263174 ##(Smalltalk.Font)  0 16 459014 ##(Smalltalk.LOGFONT)  8 #[243 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 144 1 0 0 0 0 0 0 3 2 1 34 65 114 105 97 108 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 328198 ##(Smalltalk.Point)  193 193 0 736 482 832 8 4294902623 234 256 98 0 234 256 98 6 35047 1115910 ##(Smalltalk.ToolbarIconButton)  35047 0 736 1 1180998 4 ##(Smalltalk.CommandDescription)  8 #browseClass 8 'Browse Class' 1 1 786694 ##(Smalltalk.InternalIcon)  852742 ##(Smalltalk.GdiplusBitmap)  0 16 2097670 ##(Smalltalk.GdiplusImageFromBytesInitializer)  0 8 #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 9 248 73 68 65 84 88 71 157 87 9 120 141 87 26 62 247 222 108 34 150 88 166 180 67 41 170 212 86 123 18 109 233 44 143 122 234 25 243 212 214 17 98 173 61 72 132 196 86 90 83 29 211 193 152 142 45 137 132 220 216 90 26 202 24 75 45 99 9 177 134 218 141 160 37 33 150 144 220 245 95 222 121 207 185 55 151 232 211 169 153 115 159 239 249 255 123 254 255 156 239 253 150 247 251 254 99 1 135 224 240 95 228 237 127 25 16 242 103 181 216 124 239 232 66 156 217 151 43 106 215 173 35 234 190 222 80 77 121 96 138 96 110 105 225 174 134 205 42 172 156 179 154 190 215 193 63 82 153 124 38 135 197 98 81 138 255 175 113 237 64 62 178 122 79 197 95 170 118 197 162 87 122 226 159 179 150 193 117 167 228 127 222 43 0 192 52 77 252 188 0 165 69 37 88 210 63 9 67 68 67 76 16 77 145 108 235 136 137 162 21 198 139 198 152 17 222 30 27 227 102 225 198 137 139 48 253 80 188 188 115 82 228 213 212 13 152 198 19 61 202 251 229 144 169 191 2 0 57 175 54 121 106 94 231 98 175 102 226 254 245 34 236 91 180 22 159 182 238 75 16 205 49 89 180 192 76 209 17 41 226 13 254 127 13 41 33 29 176 129 222 185 114 224 68 192 35 30 185 149 102 0 92 95 110 168 15 128 31 170 1 141 15 12 240 149 10 67 62 214 57 47 159 153 134 14 183 161 65 110 38 135 187 204 141 195 171 183 224 79 111 13 195 8 42 31 75 48 211 69 123 76 21 109 16 47 94 225 245 85 44 235 57 10 23 118 30 86 239 203 189 168 165 34 0 105 149 122 104 60 14 40 254 225 216 89 172 79 254 51 242 190 222 25 0 100 114 169 161 185 185 88 231 157 78 151 62 129 234 230 22 199 182 236 199 210 95 143 194 56 107 43 12 163 226 9 214 54 202 51 99 8 100 156 104 134 197 191 29 137 162 203 55 125 186 252 225 246 121 64 123 164 38 53 202 213 221 199 144 213 103 18 198 87 142 194 72 209 72 109 52 247 173 1 56 188 102 59 116 167 124 195 55 116 90 33 45 225 78 210 61 48 232 157 242 61 242 15 30 199 194 223 143 85 74 39 88 219 98 162 181 51 18 69 7 196 137 6 152 210 164 59 30 22 20 5 64 40 0 30 46 46 252 254 33 62 238 54 129 110 108 204 24 190 132 4 186 112 42 99 58 93 180 195 36 38 218 8 2 249 184 109 95 236 95 145 3 215 35 119 0 136 135 222 112 49 36 186 73 242 81 188 10 154 111 28 200 200 65 98 68 23 76 8 138 193 100 107 20 82 108 29 48 72 212 67 94 214 182 192 122 5 192 107 184 225 44 204 199 137 149 243 177 172 215 120 12 183 189 205 88 54 166 251 218 34 153 200 103 16 200 44 2 153 194 228 26 41 154 96 102 211 223 97 207 231 217 100 195 67 159 37 20 149 57 6 165 92 59 231 174 236 61 129 164 234 49 72 9 141 198 28 75 52 115 162 41 198 214 137 194 189 43 63 84 4 0 179 24 200 27 14 125 247 155 208 10 210 112 105 207 65 124 57 108 14 166 132 119 163 229 45 48 77 180 68 178 181 35 102 90 219 225 51 122 70 38 89 60 105 55 167 97 47 108 155 185 20 133 249 23 25 63 61 16 156 194 179 151 177 45 97 33 102 70 198 32 137 108 152 99 233 72 67 26 97 90 221 46 56 183 243 80 5 247 43 15 232 100 41 142 246 135 182 82 192 155 97 131 123 199 187 208 174 255 13 5 121 223 194 30 191 24 243 106 117 162 194 122 228 121 27 204 178 180 164 71 218 97 58 55 157 202 235 68 198 121 118 72 20 150 183 24 140 204 110 31 226 139 246 239 99 74 149 24 38 94 43 82 178 45 189 214 28 19 45 173 145 17 155 132 123 151 190 87 202 61 38 115 233 233 36 52 81 70 0 131 224 182 135 67 207 18 48 82 5 220 127 39 59 143 14 81 11 238 220 44 196 150 217 159 35 161 81 47 140 38 213 38 115 211 120 134 99 92 104 51 76 10 121 131 74 58 17 92 71 53 151 200 68 155 68 80 163 41 147 171 118 66 118 108 10 10 254 117 198 167 152 82 230 113 65 243 242 206 95 91 148 7 96 48 4 135 123 195 181 58 2 158 44 43 60 246 96 120 87 9 232 27 154 194 233 190 17 224 188 163 248 1 14 165 230 96 97 143 20 36 215 250 13 146 24 158 120 42 28 77 25 69 170 77 12 122 21 31 213 127 19 246 254 211 144 155 186 9 69 87 111 60 33 170 84 72 182 72 250 177 154 60 83 7 192 250 125 164 31 204 140 80 152 12 131 158 17 70 32 193 40 205 170 3 239 173 237 128 151 188 103 126 57 110 229 192 115 118 14 204 210 99 40 185 115 29 23 114 207 225 200 134 189 56 146 189 21 199 115 118 49 185 174 194 227 112 97 23 123 196 31 23 102 67 114 197 75 209 201 20 157 9 106 200 122 227 151 10 117 192 52 74 153 132 189 160 173 10 2 210 131 224 181 243 186 202 2 239 138 96 56 47 44 82 85 92 110 230 220 63 138 161 9 134 123 245 203 112 29 249 3 116 199 233 10 217 188 255 240 121 244 232 55 155 125 174 7 94 107 153 200 194 230 163 136 172 160 146 156 82 148 226 31 245 2 157 133 232 104 47 120 87 91 129 53 53 224 248 166 33 116 222 27 233 2 37 135 125 121 160 105 197 40 221 210 9 200 136 0 150 87 133 59 77 160 208 254 75 56 246 197 162 248 106 62 122 190 183 128 138 99 41 253 41 67 16 29 253 169 31 156 44 225 63 221 228 84 14 152 38 75 112 110 127 24 153 76 135 175 234 163 236 80 31 134 160 26 12 38 100 233 150 22 44 248 6 220 133 123 81 182 38 2 186 61 12 198 202 72 122 170 54 32 223 207 14 193 217 29 139 33 42 13 228 71 66 60 44 97 35 9 96 32 186 116 152 243 252 0 116 9 224 96 28 192 248 59 54 53 69 217 133 121 112 172 173 11 125 13 189 176 170 50 140 146 124 184 78 207 131 150 110 161 194 80 206 69 192 157 89 139 185 82 3 200 174 139 11 7 23 160 114 189 1 16 193 67 33 194 120 21 253 208 169 237 236 64 77 250 89 15 120 77 38 225 193 17 10 192 131 141 205 224 186 189 25 142 156 102 42 17 189 203 67 224 184 252 9 28 187 251 144 158 4 147 81 149 239 213 128 115 29 115 36 155 33 203 106 140 75 251 86 161 74 157 177 16 54 74 8 65 136 15 16 211 101 182 159 1 178 79 48 9 41 242 170 186 45 67 66 66 168 208 168 16 120 113 143 44 32 128 12 129 187 95 55 128 183 228 60 28 123 123 208 66 11 28 43 105 45 193 56 179 27 211 245 225 112 103 87 131 119 107 20 92 89 225 208 24 34 216 27 224 226 30 59 170 213 25 71 235 7 81 70 168 16 68 117 73 9 120 128 170 153 196 254 238 201 4 52 76 175 236 171 170 143 249 43 225 125 38 97 28 105 40 112 127 99 3 232 101 87 225 202 79 134 39 35 8 122 102 21 232 105 44 80 233 252 202 91 33 224 249 166 61 28 185 195 225 200 168 196 80 132 209 3 47 226 226 206 116 84 175 77 235 43 13 38 128 15 9 32 14 81 49 211 252 0 88 245 100 139 96 165 86 172 96 227 2 100 247 125 210 89 133 137 135 4 208 91 1 40 93 223 8 102 217 53 56 111 109 70 217 234 170 180 154 46 207 160 114 38 156 182 140 165 58 111 2 156 103 231 194 189 82 82 182 50 89 83 27 151 118 164 162 122 228 120 186 159 0 66 36 128 193 136 138 158 238 79 66 118 74 221 205 234 231 134 161 171 170 160 230 29 165 30 164 166 109 67 124 194 124 249 69 68 68 121 61 25 95 1 231 154 38 48 202 174 195 227 42 128 99 227 203 12 195 11 84 30 198 120 11 60 180 147 25 183 214 195 113 110 62 60 164 40 210 233 157 13 213 232 129 52 84 171 54 145 73 56 132 34 89 48 4 111 119 157 133 99 167 174 97 243 246 83 120 240 216 17 80 92 116 175 4 11 254 154 131 230 45 19 248 222 123 104 221 121 50 105 104 208 3 199 223 1 200 109 215 186 166 240 62 186 193 210 227 64 217 206 174 48 211 35 88 152 194 9 46 8 37 95 53 164 21 183 225 62 243 49 180 52 50 132 165 219 220 80 3 231 119 165 162 178 4 96 27 8 139 85 38 225 48 116 235 246 17 114 143 159 195 174 111 143 170 80 92 187 89 140 148 89 118 212 111 56 137 207 251 82 152 47 98 4 58 199 204 37 0 157 205 33 127 4 52 54 160 199 155 104 213 35 95 133 115 30 157 4 35 141 213 112 45 185 191 204 6 109 87 47 181 153 231 228 116 104 43 66 225 101 93 192 186 154 56 191 59 21 225 145 4 96 141 37 128 56 21 130 119 126 53 87 237 113 245 202 109 36 36 102 162 230 11 99 252 69 42 22 214 160 209 188 31 69 233 142 232 78 137 108 199 50 67 188 215 224 202 155 135 155 187 186 195 83 234 235 217 174 43 89 112 101 214 132 177 150 84 100 14 184 79 103 170 121 207 201 20 104 169 4 96 47 7 176 2 149 34 227 233 1 90 111 29 6 139 24 138 230 45 146 16 55 116 49 42 85 146 33 233 205 83 202 96 88 131 165 82 153 35 125 16 22 214 7 3 98 63 195 169 83 255 230 39 153 170 244 190 161 57 139 85 217 149 57 234 126 112 18 165 235 94 103 14 4 227 254 186 234 240 20 93 246 121 224 68 50 67 16 10 55 169 136 117 181 112 110 247 10 132 214 160 133 65 84 96 163 88 36 21 63 160 188 171 138 146 176 146 162 130 44 161 226 26 213 7 98 220 184 165 200 207 47 8 232 100 251 243 43 103 220 213 61 181 203 66 161 27 247 225 218 211 23 222 47 34 112 127 27 243 65 123 172 138 139 155 30 240 166 86 161 7 170 0 235 171 243 43 103 25 66 34 37 0 186 214 70 139 109 100 131 85 90 74 175 144 146 82 113 221 151 198 96 250 140 44 20 20 220 10 40 150 159 248 114 60 57 23 168 15 75 249 237 239 235 154 242 44 0 207 37 56 46 172 68 201 165 47 249 140 95 78 28 142 211 83 224 73 253 5 43 34 123 194 250 96 156 217 189 4 97 85 73 67 105 185 141 138 109 195 85 49 18 98 0 154 55 79 194 194 133 91 81 84 252 212 145 141 133 72 233 41 175 132 229 144 158 61 25 169 67 12 31 202 26 38 79 2 154 127 129 139 30 144 221 80 22 38 172 125 17 167 247 165 33 56 114 24 21 74 197 180 94 188 143 232 152 120 172 94 179 3 165 46 73 65 57 100 13 160 72 163 101 81 170 112 46 240 191 242 108 211 96 5 81 161 144 25 226 81 199 35 246 117 94 61 15 115 81 186 119 48 30 219 107 147 9 204 129 29 75 148 181 210 213 61 122 206 192 214 173 121 1 55 203 27 221 240 208 163 220 133 150 171 47 231 159 58 27 86 88 245 60 127 204 35 192 229 249 184 123 234 31 152 154 152 141 239 190 187 251 60 171 126 244 206 127 0 30 172 252 189 189 221 143 246 0 0 0 0 73 69 78 68 174 66 96 130] 395334 3 ##(Smalltalk.Bitmap)  0 16 0 0 0 0 3 930 33 33 1 35043 853766 ##(Smalltalk.ToolbarButton)  35043 0 736 1 1090 8 #refreshInspector 8 'Refresh Inspector' 1 1 0 1266 0 16 1572870 ##(Smalltalk.ImageRelativeFileLocator)  8 'Tools.bmp' 2032142 ##(Smalltalk.STBExternalResourceLibraryProxy)  8 'dolphindr006.dll' 0 0 71 930 1857 33 85 35045 1058 35045 0 736 1 1090 8 #umlBasicInspect 8 'Inspect' 1 1 263494 3 ##(Smalltalk.Icon)  0 16 1424 8 'BasicInspector.ico' 1472 1266 0 16 0 0 0 0 3 930 33 33 1 98 4 1328 1050118 ##(Smalltalk.ToolbarSeparator)  0 0 736 3 0 1 1520 1072 234 240 98 6 1280 119 1632 117 1392 1 0 1 0 930 33 33 930 45 45 0 656198 1 ##(Smalltalk.FlowLayout)  1 1 1 983302 ##(Smalltalk.MessageSequence)  202 208 98 2 721670 ##(Smalltalk.MessageSend)  8 #createAt:extent: 98 2 930 1 1 930 161 51 736 1874 8 #updateSize 1008 736 983302 ##(Smalltalk.WINDOWPLACEMENT)  8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 80 0 0 0 25 0 0 0] 98 0 930 193 193 0 27 410 8 ##(Smalltalk.ReferenceView)  98 14 0 656 98 2 8 1140850688 131073 2080 0 482 8 4278190080 0 7 0 0 0 2080 1180166 ##(Smalltalk.ResourceIdentifier)  752 8 #resource_UML_Common 0 1810 202 208 98 1 1874 1904 98 2 930 161 1 930 1239 51 2080 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 80 0 0 0 0 0 0 0 187 2 0 0 25 0 0 0] 1008 2064 0 27 234 256 1008 0 1810 202 208 98 1 1874 1904 98 2 930 1 1 930 1399 51 656 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 187 2 0 0 25 0 0 0] 98 2 736 2080 2064 0 27 0 0 0 410 576 98 15 0 560 98 2 8 1140850688 131073 2560 0 721158 ##(Smalltalk.SystemColor)  31 0 7 0 0 0 2560 656390 ##(Smalltalk.GridLayout)  3 1 1 1 234 256 1008 0 1810 202 208 98 1 1874 1904 98 2 930 1 51 930 1399 141 2560 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 25 0 0 0 187 2 0 0 95 0 0 0] 98 0 2064 0 27 234 256 98 2 2560 8 'headerContainer' 0 1810 202 208 98 1 1874 1904 98 2 930 1 1 930 1399 191 560 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 187 2 0 0 95 0 0 0] 98 2 656 2560 2064 0 27 0 0 0 410 576 98 15 0 416 98 2 8 1140850688 131073 3072 0 0 0 7 0 0 0 3072 530 1 1 0 410 576 98 15 0 3072 98 2 8 1140850688 131073 3152 0 2626 31 0 7 0 0 0 3152 530 1 1 0 0 410 8 ##(Smalltalk.SWLinkButton)  98 28 0 3152 98 2 8 1140850688 1 3248 0 2626 31 0 7 0 850 0 16 882 8 #[237 255 255 255 0 0 0 0 0 0 0 0 0 0 0 0 188 2 0 0 0 0 0 0 3 2 1 34 84 114 101 98 117 99 104 101 116 32 77 83 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] 930 193 193 0 3248 0 0 11 930 33 33 1090 8 #exit 8 'Close' 1 1 1154 1186 0 16 1218 0 8 #[137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 32 0 0 0 32 8 6 0 0 0 115 122 122 244 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 0 9 112 72 89 115 0 0 3 175 0 0 3 175 1 24 30 177 125 0 0 10 69 73 68 65 84 88 71 173 87 9 84 148 215 21 46 42 213 186 165 117 163 226 33 158 26 177 174 73 27 19 33 113 13 40 112 92 80 1 5 81 36 8 8 12 1 217 100 95 134 129 1 134 109 64 24 118 144 77 65 17 140 226 130 34 96 48 130 2 178 106 16 69 192 40 219 0 178 10 106 193 175 247 141 144 83 104 150 218 246 63 231 59 239 159 247 238 220 239 123 247 222 183 252 82 191 123 191 71 86 67 67 67 101 211 166 77 235 22 44 88 176 108 218 180 105 115 165 232 121 253 250 117 183 88 44 126 116 231 206 157 178 204 204 204 27 244 187 241 253 220 254 186 181 148 162 162 162 90 82 82 210 181 154 154 154 225 145 145 17 252 26 234 234 234 222 166 166 166 22 42 43 43 107 146 219 201 255 139 16 169 69 139 22 201 71 68 68 220 232 236 236 196 155 55 111 36 168 170 170 68 242 169 36 4 134 8 192 245 117 5 215 199 5 1 66 63 36 166 36 160 180 172 20 52 123 137 93 79 79 15 18 19 19 139 151 45 91 246 49 137 144 122 95 33 82 59 118 236 208 162 144 246 13 13 13 161 191 191 31 167 210 82 97 102 109 4 3 235 125 48 116 213 132 142 179 50 246 218 127 41 129 182 179 18 12 92 247 226 136 237 126 28 181 212 199 201 164 120 137 0 246 223 170 170 170 161 253 251 247 27 189 143 8 41 29 29 29 227 71 143 30 141 12 12 12 160 184 184 8 28 27 99 112 220 15 73 200 20 142 200 97 143 131 2 92 68 28 132 165 249 32 156 224 17 101 129 125 206 27 160 96 32 7 117 59 5 152 121 28 132 201 49 3 228 23 228 129 249 120 250 244 41 14 31 62 236 64 34 38 253 86 36 38 169 168 168 236 161 92 255 131 205 32 245 116 50 76 143 235 227 144 155 26 20 140 100 97 230 175 129 123 245 133 232 27 234 70 239 80 215 56 176 190 251 77 37 176 61 161 135 207 143 44 132 142 139 50 204 28 244 17 29 23 41 137 6 171 13 42 96 195 95 21 49 107 214 44 249 220 220 220 94 150 115 22 70 43 119 99 104 56 110 192 167 71 230 32 226 178 7 122 6 59 208 61 36 70 207 43 134 142 9 160 62 54 70 54 169 5 66 172 53 154 3 117 123 5 216 240 76 112 66 20 2 230 179 184 184 248 213 135 31 126 184 246 151 210 33 205 231 243 115 90 91 91 113 45 55 7 54 238 102 56 224 166 140 207 77 230 192 46 89 3 45 189 13 104 233 111 64 219 203 6 180 15 54 162 125 104 60 218 168 175 149 198 90 201 166 165 175 1 188 115 134 88 199 153 3 45 231 141 176 245 228 32 251 210 5 48 223 161 161 161 165 36 96 234 196 84 72 45 93 186 84 133 10 6 141 77 141 176 119 181 198 177 32 61 172 51 89 128 109 62 50 200 171 59 131 250 238 10 60 233 171 64 227 64 37 26 95 86 162 105 176 234 39 52 14 190 235 99 99 13 100 83 223 93 142 226 166 43 80 21 200 96 157 233 60 112 252 181 97 229 192 193 227 250 199 160 218 2 45 235 131 19 163 32 237 229 229 117 233 201 147 39 136 75 136 133 183 200 9 170 54 171 161 236 41 3 205 248 197 40 109 189 138 170 23 121 168 233 205 199 253 254 2 60 24 184 137 31 94 142 7 235 99 99 204 134 217 86 180 231 65 47 117 21 182 122 201 64 249 216 50 248 68 57 35 76 20 10 198 17 28 28 92 60 49 10 114 180 131 189 174 171 123 8 87 79 7 56 138 76 240 165 229 2 168 135 201 65 239 188 60 242 91 82 81 212 117 14 119 122 50 113 183 47 11 37 125 231 81 218 247 237 79 96 191 223 33 75 98 83 212 149 129 91 109 103 96 152 189 26 187 69 114 88 111 61 31 54 33 95 195 193 221 6 181 15 107 65 117 246 86 90 90 250 167 253 97 146 188 188 188 62 85 62 229 254 26 188 131 93 161 199 83 193 54 158 44 180 147 63 194 209 27 171 144 220 224 132 220 206 24 228 189 136 67 126 119 60 10 186 19 8 39 199 33 159 250 216 24 179 201 237 140 70 250 143 158 56 154 183 10 58 169 31 65 133 47 11 29 238 102 4 70 123 35 227 220 89 60 120 240 0 91 182 108 177 29 219 41 165 13 12 12 68 229 21 229 146 16 37 100 134 99 183 219 90 236 12 94 12 253 115 43 96 241 253 167 240 172 85 195 121 177 31 46 118 6 34 187 43 24 151 187 132 132 16 92 26 197 187 119 33 141 5 145 77 0 190 21 11 192 175 219 9 203 162 191 67 63 107 57 118 133 44 134 154 195 74 196 101 134 66 120 34 8 229 229 229 176 178 178 58 53 150 134 233 182 182 182 23 104 215 67 80 136 63 18 179 195 161 98 191 12 26 162 165 48 202 254 24 182 37 138 112 171 251 10 193 207 180 145 38 118 197 217 14 79 100 116 240 8 94 227 192 250 207 116 112 37 54 33 207 117 233 63 155 97 91 170 8 163 203 31 67 51 106 41 190 178 91 140 184 11 66 4 4 251 129 113 185 187 187 151 144 128 153 108 53 204 114 116 116 188 123 235 214 45 201 224 169 156 104 108 115 248 8 251 162 151 195 244 234 103 112 184 183 9 188 122 85 248 253 168 142 160 231 251 17 219 106 142 228 118 7 164 182 59 17 156 71 225 36 233 99 99 204 198 247 199 157 240 172 87 129 67 249 70 152 94 91 11 237 184 229 216 100 189 8 241 217 161 240 11 242 70 225 173 66 120 122 122 214 17 247 7 76 192 7 118 118 118 119 242 242 242 36 2 178 10 82 161 234 244 87 104 199 174 2 39 71 17 206 229 202 224 63 217 133 128 103 90 16 62 63 128 144 102 61 156 104 254 26 17 173 71 17 213 106 38 1 123 103 125 33 205 135 16 252 92 135 108 53 193 111 216 1 231 10 37 152 95 87 128 78 252 74 108 177 145 67 218 245 88 248 7 251 128 113 185 185 185 61 34 238 57 18 1 198 198 198 151 114 114 174 66 16 232 139 235 197 23 177 215 253 51 104 71 173 129 249 149 245 112 171 84 131 160 137 145 235 74 72 68 45 198 136 108 53 37 98 14 193 92 210 70 50 17 45 38 8 111 49 68 104 243 97 18 113 0 126 77 123 225 94 173 10 243 156 47 160 19 179 26 219 157 87 226 106 81 22 77 82 128 171 196 69 53 80 54 38 96 230 246 237 219 227 179 179 179 225 237 195 195 237 242 2 152 135 104 98 95 232 26 112 46 108 0 183 106 23 133 85 23 161 207 245 137 132 205 218 28 49 109 150 136 107 179 65 252 40 98 219 172 169 207 66 18 141 240 22 35 170 129 195 8 124 166 3 238 253 157 224 92 92 143 125 225 107 160 239 167 130 219 21 249 224 251 122 225 98 246 69 232 234 234 158 35 1 127 100 17 152 38 35 35 99 153 145 145 129 232 216 40 100 94 72 135 48 221 3 123 124 86 195 56 109 3 60 202 119 35 176 197 128 28 27 35 170 197 28 177 109 86 72 104 63 142 196 118 71 36 81 29 48 156 164 252 199 183 217 145 136 99 136 108 49 67 88 179 33 2 154 245 225 81 181 27 71 207 174 199 30 193 42 248 166 218 227 250 205 43 16 134 4 33 43 43 11 43 86 172 240 36 238 233 76 192 20 194 58 30 143 247 58 253 76 26 45 147 64 20 215 220 132 186 235 223 112 56 250 11 56 125 183 11 126 20 230 80 154 117 12 35 111 59 142 36 177 51 82 196 238 72 21 123 72 144 44 118 35 65 78 36 194 22 209 173 150 16 146 189 79 171 9 156 139 118 65 63 78 17 219 93 86 162 224 94 14 194 34 67 145 150 126 26 65 65 65 111 137 83 133 32 205 4 176 219 138 28 29 149 55 147 83 146 225 198 117 65 117 109 5 130 210 221 160 233 187 22 156 244 109 8 124 254 13 68 68 18 73 196 9 163 228 167 104 41 166 117 240 9 222 56 37 246 164 85 224 74 145 113 132 136 162 113 130 108 2 154 191 193 55 231 182 66 203 127 45 60 79 30 195 195 134 7 112 245 112 6 227 208 211 211 171 32 206 191 252 235 209 60 107 230 204 153 71 105 143 70 92 124 44 194 73 105 253 179 90 24 249 171 227 160 112 61 60 138 116 145 216 233 143 51 47 34 144 66 155 77 74 167 47 78 139 125 144 214 70 109 155 15 45 69 111 36 145 144 147 157 2 156 238 58 129 4 106 185 101 7 113 48 116 61 14 121 43 163 182 169 26 81 177 34 68 199 68 65 36 18 97 254 252 249 142 99 75 112 236 84 100 151 199 229 106 106 106 183 163 99 162 193 229 185 227 102 97 62 106 234 203 161 199 87 193 215 225 74 16 214 89 225 122 111 6 238 15 150 160 122 240 46 74 94 22 160 120 224 26 138 250 175 82 155 139 138 193 239 81 57 88 132 107 189 103 17 242 196 26 71 162 148 112 128 183 5 101 15 139 80 114 239 14 60 120 110 136 142 142 130 150 150 214 125 226 98 231 0 75 253 184 103 246 228 201 147 181 44 45 45 251 194 194 195 224 232 98 143 170 154 74 212 61 189 15 243 32 109 24 69 168 34 252 177 3 190 239 191 130 254 145 30 76 124 250 71 122 113 123 32 7 162 6 71 152 196 169 193 208 79 29 213 245 247 80 247 184 22 246 78 118 96 62 237 237 237 95 209 33 100 64 172 127 26 77 253 56 1 44 10 114 115 231 206 229 186 186 186 14 11 67 132 176 119 180 67 241 221 34 116 247 117 33 233 178 8 166 34 117 248 22 155 225 108 123 56 74 233 56 110 120 85 139 198 215 15 81 246 242 59 100 136 69 16 148 112 96 18 185 19 81 231 3 208 217 211 142 170 234 74 216 57 216 80 229 11 217 206 247 86 86 86 54 152 56 150 16 126 241 186 254 123 26 92 73 215 166 72 23 23 151 145 128 192 0 137 122 182 60 123 250 122 240 162 175 3 215 203 206 35 234 6 31 126 55 44 33 40 180 132 95 161 5 189 91 32 34 151 135 75 119 207 64 220 221 134 254 151 253 72 74 73 148 144 51 31 92 46 247 237 146 37 75 82 70 67 255 111 183 161 137 169 152 198 12 231 205 155 23 64 59 228 128 64 32 128 143 175 55 108 142 91 33 42 38 66 50 171 225 225 97 201 199 201 63 134 233 91 129 192 222 135 71 134 233 172 255 1 177 241 209 176 181 183 134 23 159 7 63 129 31 204 205 205 135 22 46 92 24 65 62 63 29 91 247 19 9 127 238 55 19 177 124 210 164 73 102 27 55 110 172 164 195 10 124 31 62 237 148 222 52 43 91 152 153 155 72 138 202 215 159 47 1 215 203 3 28 11 19 216 216 89 193 155 239 5 186 91 194 197 213 5 74 74 74 181 83 166 76 177 38 95 171 223 135 124 76 16 219 36 100 9 91 167 78 157 234 75 66 170 141 140 140 222 80 46 225 229 237 5 158 23 15 180 121 189 3 189 211 149 78 210 154 154 154 14 51 226 233 211 167 179 124 171 177 186 34 176 212 254 87 15 251 144 152 49 90 56 91 169 53 155 49 99 70 236 154 53 107 10 152 32 250 134 104 84 85 85 109 218 188 121 115 245 39 159 124 82 56 123 246 236 147 100 99 65 80 37 200 19 102 17 126 243 99 228 63 81 198 156 252 129 32 195 82 67 80 100 145 33 108 31 197 54 106 191 32 172 32 252 121 52 220 255 23 226 159 19 199 28 179 244 176 106 102 162 24 88 205 176 62 54 246 94 31 162 255 4 6 75 206 126 132 40 63 235 0 0 0 0 73 69 78 68 174 66 96 130] 8 #out 196934 1 ##(Smalltalk.RGB)  16875777 786694 ##(Smalltalk.IndexedColor)  33554437 3586 33554447 3586 33554459 0 0 0 0 0 0 1810 202 208 98 2 1874 1904 98 2 930 1249 1 930 151 61 3248 1874 8 #text: 98 1 8 'Close' 3248 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 112 2 0 0 0 0 0 0 187 2 0 0 30 0 0 0] 98 0 2064 0 27 0 410 576 98 15 0 3152 98 2 8 1140850688 131073 3872 0 0 0 7 0 0 0 3872 1180166 ##(Smalltalk.ProportionalLayout)  234 240 1008 32 234 256 1008 0 1810 202 208 98 1 1874 1904 98 2 930 1 1 930 1249 61 3872 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 112 2 0 0 30 0 0 0] 98 0 2064 0 27 234 256 98 2 3872 8 'buttonsContainer' 0 1810 202 208 98 1 1874 1904 98 2 930 1 599 930 1399 61 3152 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 43 1 0 0 187 2 0 0 73 1 0 0] 98 2 3248 3872 2064 0 27 0 0 410 576 98 15 0 3072 98 2 8 1140850688 131073 4368 0 0 0 7 0 0 0 4368 530 1 1 0 0 0 0 410 8 ##(Smalltalk.CardContainer)  98 16 0 4368 98 2 8 1140850688 131073 4448 0 482 8 4278190080 0 7 0 0 0 4448 655878 ##(Smalltalk.CardLayout)  202 208 1008 0 234 256 1008 0 410 8 ##(Smalltalk.TabViewXP)  98 28 0 4448 98 2 8 1140916736 1 4624 590662 2 ##(Smalltalk.ListModel)  202 208 1008 0 1310726 ##(Smalltalk.IdentitySearchPolicy)  0 0 1 0 0 0 4624 0 8 4294902987 787814 3 ##(Smalltalk.BlockClosure)  0 0 918822 ##(Smalltalk.CompiledMethod)  2 3 8 ##(Smalltalk.ListControlView)  8 #defaultGetTextBlock 575230339 8 #[30 105 226 0 106] 8 #displayString 4816 7 257 0 4802 0 0 4834 2 3 8 ##(Smalltalk.IconicListAbstract)  8 #defaultGetImageBlock 579598755 8 #[30 105 226 0 106] 8 #iconImageIndex 4928 7 257 0 1049670 1 ##(Smalltalk.IconImageManager)  0 0 0 0 0 8 #noIcons 0 0 0 0 0 1810 202 208 98 2 1874 1904 98 2 930 1 1 930 1399 599 4624 1874 8 #tcmSetExtendedStyle:dwExStyle: 98 2 -1 1 4624 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 187 2 0 0 43 1 0 0] 98 0 2064 0 27 1810 202 208 98 1 1874 1904 98 2 930 1 1 930 1399 599 4448 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 187 2 0 0 43 1 0 0] 98 1 4624 2064 0 27 234 256 98 2 4448 8 'card' 0 1810 202 208 98 1 1874 1904 98 2 930 1 1 930 1399 599 4368 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 0 0 0 0 187 2 0 0 43 1 0 0] 98 1 4448 2064 0 27 234 256 1008 0 1810 202 208 98 1 1874 1904 98 2 930 1 191 930 1399 659 3072 2002 8 #[44 0 0 0 0 0 0 0 1 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 0 0 0 95 0 0 0 187 2 0 0 168 1 0 0] 98 2 4368 3152 2064 0 27 234 256 1008 0 461638 4 ##(Smalltalk.MenuBar)  0 16 98 1 265030 4 ##(Smalltalk.Menu)  0 16 98 4 984134 2 ##(Smalltalk.CommandMenuItem)  1 1090 1552 8 'Basic Inspect' 1 1 0 0 0 5938 1 1090 1120 8 'Browser Class' 1 1 0 0 0 983366 1 ##(Smalltalk.DividerMenuItem)  4097 5938 1 1090 3440 8 'Exit' 1 1 0 0 0 8 'Object Options' 0 134217729 0 0 35041 0 0 8 '' 0 134217729 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1810 202 208 98 2 1874 1904 98 2 930 2879 21 930 1431 961 416 1874 8 #updateMenuBar 1008 416 2002 8 #[44 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 159 5 0 0 10 0 0 0 106 8 0 0 234 1 0 0] 98 2 560 3072 2064 0 27 )! !
!UMLCustomizedInspectorShell class categoriesFor: #createUMLInspectorFor:!public! !
!UMLCustomizedInspectorShell class categoriesFor: #resource_Default_view!public!resources-views! !

